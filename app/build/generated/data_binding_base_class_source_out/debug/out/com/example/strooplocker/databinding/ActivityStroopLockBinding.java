// Generated by view binder compiler. Do not edit!
package com.example.strooplocker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.strooplocker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStroopLockBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final GridLayout answerGrid;

  @NonNull
  public final TextView challengeText;

  @NonNull
  public final Button exitButton;

  @NonNull
  public final TextView instructionText;

  @NonNull
  public final LinearLayout menuButtonsLayout;

  @NonNull
  public final TextView titleText;

  private ActivityStroopLockBinding(@NonNull ConstraintLayout rootView,
      @NonNull GridLayout answerGrid, @NonNull TextView challengeText, @NonNull Button exitButton,
      @NonNull TextView instructionText, @NonNull LinearLayout menuButtonsLayout,
      @NonNull TextView titleText) {
    this.rootView = rootView;
    this.answerGrid = answerGrid;
    this.challengeText = challengeText;
    this.exitButton = exitButton;
    this.instructionText = instructionText;
    this.menuButtonsLayout = menuButtonsLayout;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStroopLockBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStroopLockBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_stroop_lock, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStroopLockBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answerGrid;
      GridLayout answerGrid = ViewBindings.findChildViewById(rootView, id);
      if (answerGrid == null) {
        break missingId;
      }

      id = R.id.challengeText;
      TextView challengeText = ViewBindings.findChildViewById(rootView, id);
      if (challengeText == null) {
        break missingId;
      }

      id = R.id.exitButton;
      Button exitButton = ViewBindings.findChildViewById(rootView, id);
      if (exitButton == null) {
        break missingId;
      }

      id = R.id.instructionText;
      TextView instructionText = ViewBindings.findChildViewById(rootView, id);
      if (instructionText == null) {
        break missingId;
      }

      id = R.id.menuButtonsLayout;
      LinearLayout menuButtonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (menuButtonsLayout == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityStroopLockBinding((ConstraintLayout) rootView, answerGrid, challengeText,
          exitButton, instructionText, menuButtonsLayout, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
